version: '3.8'

services:
  server:
    build:
      context: backend/
      dockerfile: Dockerfile
    working_dir: /application
    ports:
      - 3000:3000
    volumes:
      - ./backend:/application
      - draw-contest_server_node_modules:/application/node_modules
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    working_dir: /application
    ports:
      - 3001:3001
    volumes:
      - ./frontend:/application
      - draw-contest_frontend_node_modules:/application/node_modules

  database:
    image: postgres:15.2-alpine
    platform: linux/amd64
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - .local/init/postgres:/docker-entrypoint-initdb.d
      - .local/data/postgres:/var/lib/postgresql/data/
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 20s
      timeout: 20s
      retries: 5
  localstack:
    container_name: 'localstack'
    image: localstack/localstack
    ports:
      - '4566:4566' # Default port forward
      - '8080:8080' # WebUI port forward
    environment:
      - SERVICES=s3 #AWS Services that you want in your localstack
      - DEBUG=1 # Debug level 1 if you want to logs, 0 if you want to disable
      - START_WEB=1 # Flag to control whether the Web UI should be started in Docker
      - LAMBDA_REMOTE_DOCKER=0
      - DATA_DIR=/tmp/localstack/data #  Local directory for saving persistent data(Example: es storage)
      - DEFAULT_REGION=us-east-1
    volumes:
      - './.localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'

volumes:
  draw-contest_server_node_modules:
  draw-contest_frontend_node_modules:
